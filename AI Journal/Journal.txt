AI Usage Journal
Ryan Gaffney
Section 0203
rgaffney@terpmail.umd.edu

Week 1:
This week I used AI mainly for debugging and I used my previous work from another class to look at and see what put down for a simmilar question to see if I can answer 
the question without using AI to answer it for me. I tried out Claude AI for the first time and wanted to try and see how it  differs from ChatGPT to see if the results can be 
different or simmilar in any capacity. From what I found is that the results usually were the same if you just copied and pasted the question in there and nothing else. Even though 
it does practially give you the same answer Claude does try to explain the code and results in greater detail rather ChatGPT just gives a short description of both 
the code and the results.

Claude: https://claude.ai/share/b907db96-3c44-4449-885d-9b5384dca2d1
ChatGPT: https://chatgpt.com/share/68c78ec2-408c-8004-8047-5195e42889c5

Week 2: 
This week I didn’t use AI to complete the assignment itself, but I thought about
how it could be useful for creating practice questions that explain concepts 
with small examples. Since our focus was on conditionals, loops, and lists, 
I could have asked AI to give me prompts like these:

- Describe how a while loop is different from a for loop, 
with an example that runs until a counter reaches 5.

- Show how to combine a loop and a conditional, 
with an example that prints only the even numbers from [2, 3, 5, 8, 10].

Using AI this way would help me think about the concepts more clearly and 
give me extra practice problems, but I made sure to work through the actual 
assignment on my own.

https://claude.ai/share/fe0d2e05-7c4a-4f44-8beb-630c7af8b195



Week 3:
This week I didn't use any AI for this weeks assignment but I did have questions pretaining to this weeks material
- What does it mean that the argument expression is evaluated before the function is invoked?
- What happens if a function ends without a return statement or with a return but no expression?

1. Argument expressions evaluated before function invocation
Python calculates the values of any arguments first.
Only after that does it hand those values into the function.
Example: print_twice(3+4) → 3+4 becomes 7 before the function runs.

2. Function ending without a return (or with a bare return)
If no return is given, or if return has no value, the function returns None.
This is the default behavior for all “void” functions.

https://claude.ai/share/62d72246-35c0-44de-aab6-9faf0dc7f386



Week 4: 
This week I didn't use any AI at all for this week's assignment but I did have some questions based on class design & attributes 
1. How do you decide which attributes belong in a class versus being passed as parameters to its methods?
2. When initializing an object, how should default values for attributes be handled, and when is it better to require explicit values?
3. What are the implications of making an attribute mutable (like a list or dictionary) in a class?

1. Attributes vs Parameters:
    - Attributes store an object’s persistent state or identity.
    - Parameters are for temporary, method-specific values.
2. Default Values vs Required Values:
    - Use defaults for optional or common starting values.
    - Require explicit values for essential attributes that define the object.
3. Mutable Attributes:
    - Mutable attributes (lists, dicts) can change, which is useful but can cause unintended side effects.
    - Always initialize mutable attributes in __init__ to give each object its own copy.

https://claude.ai/share/2b075e44-c64d-4308-a9a6-30ba2ad34ffe